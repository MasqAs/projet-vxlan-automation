{# Interface Configuration #}
{% for interface in device.interfaces.all() %}
interface {{ interface.name }}
{%- if interface.description %}
description {{ interface.description }}
{%- endif %}
{%- if interface.name == 'Ethernet3' %}
switchport mode trunk
no shutdown
mtu 9214
{%- else %}
no shutdown
no switchport
ip address {{ ipam.IPAddress.objects.get(assigned_object_id=interface.id).address }}
mtu 9214
{%- endif %}
!
{% endfor %}

{# BGP Configuration #}
{% set loopback_interface = device.interfaces.get(name='Loopback0') %}
{% set router_id = ipam.IPAddress.objects.get(assigned_object_id=loopback_interface.id).address %}
router bgp {{ device.custom_field_data.ASN }}
router-id {{ router_id }}
maximum-paths 4 ecmp 4
neighbor SPINE_GROUP peer group
neighbor SPINE_GROUP allowas-in 1
neighbor SPINE_GROUP ebgp-multihop 4
neighbor SPINE_GROUP send-community extended
neighbor SPINE_GROUP maximum-routes 12000
{%- for interface in device.interfaces.all() %}
    {%- if interface.connected_endpoints and interface.name != 'Ethernet3' %}
        {%- for remote_interface in interface.connected_endpoints %}
            {%- set remote_ip = ipam.IPAddress.objects.get(assigned_object_id=remote_interface.id) %}
neighbor {{ remote_ip.address }} peer group SPINE_GROUP
neighbor {{ remote_ip.address }} remote-as {{ remote_interface.device.custom_field_data.ASN }}
        {%- endfor %}
    {%- endif %}
{%- endfor %}
!
address-family ipv4
{%- for interface in device.interfaces.all() %}
    {%- if interface.connected_endpoints and interface.name != 'Ethernet3' %}
        {%- for remote_interface in interface.connected_endpoints %}
            {%- set remote_ip = ipam.IPAddress.objects.get(assigned_object_id=remote_interface.id) %}
neighbor {{ remote_ip.address }} activate
        {%- endfor %}
    {%- endif %}
{%- endfor %}
!

{# VXLAN IRB Configuration #}
ip virtual-router mac-address 00:0a:bc:10:11:02
!

{# VLAN Configuration #}
{% for vlan in VLAN.objects.filter(site=device.site) %}
{% if vlan.tenant %}
vlan {{ vlan.vid }}
name {{ vlan.name }}
!
interface Vlan{{ vlan.vid }}
description {{ vlan.tenant.name }}_ANYCAST_GW
vrf {{ vlan.tenant.name }}
{% set prefix = ipam.Prefix.objects.get(vlan=vlan) %}
{% set first_ip = prefix.first_available_ip %}
ip address virtual {{ first_ip }}/{{ prefix.prefix.prefixlen }}
!
{% endif %}
{% endfor %}

{# VXLAN Interface Configuration #}
interface Vxlan1
description VTI
vxlan source-interface Loopback0
{% for vlan in ipam.VLAN.objects.filter(site=device.site) %}
{% if vlan.tenant %}
vxlan vlan {{ vlan.vid }} vni {{ vlan.custom_field_data.vni|default(1000 + vlan.vid) }}
{% set remote_vteps = device.custom_field_data.remote_vteps|default([]) %}
{% for vtep in remote_vteps %}
vxlan vlan {{ vlan.vid }} flood vtep {{ vtep }}
{% endfor %}
{% endif %}
{% endfor %}
!

{# BGP EVPN Configuration #}
router bgp {{ device.custom_field_data.ASN }}
{% for vlan in ipam.VLAN.objects.filter(site=device.site) %}
{% if vlan.tenant %}
!
vlan {{ vlan.vid }}
rd {{ device.custom_field_data.rd_prefix }}:{{ device.custom_field_data.ASN }}
route-target both {{ vlan.custom_field_data.route_target|default('10.50.0.0:1200') }}
redistribute learned
{% endif %}
{% endfor %}